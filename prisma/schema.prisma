generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Define the Seasons model
// One to many relationship
// One season is associated with many fruits and many vegetetables
model Season {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  fruits       Fruit[]
  vegetables   Vegetable[]
}

// Define the Fruits model
model Fruit {
  id           Int       @id @default(autoincrement())
  name         String
  season       Season?   @relation(fields: [season_name], references: [name])
  season_name  String?
  // description  String?
}

// Define the Vegetables model
model Vegetable {
  id           Int       @id @default(autoincrement())
  name         String
  season       Season?   @relation(fields: [season_name], references: [name])
  season_name  String?
  // description  String?
}



// model Post {
//   id        String     @default(cuid()) @id
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User?   @relation(fields: [authorId], references: [id])
//   authorId  String?
// }

// model User {
//   id            String       @default(cuid()) @id
//   name          String?
//   email         String?   @unique
//   createdAt     DateTime  @default(now()) @map(name: "created_at")
//   updatedAt     DateTime  @updatedAt @map(name: "updated_at")
//   posts         Post[]
//   @@map(name: "users")
// }
// model Post {
//   id        String     @default(cuid()) @id
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User?   @relation(fields: [authorId], references: [id])
//   authorId  String?
// }

// model User {
//   id            String       @default(cuid()) @id
//   name          String?
//   email         String?   @unique
//   createdAt     DateTime  @default(now()) @map(name: "created_at")
//   updatedAt     DateTime  @updatedAt @map(name: "updated_at")
//   posts         Post[]
//   @@map(name: "users")
// }